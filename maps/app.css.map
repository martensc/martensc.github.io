{"version":3,"sources":["base/_buttons.scss","base/extends/_button.scss","base/_typography.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","base/_variables.scss","base/_forms.scss","base/_tables.scss","base/_lists.scss","neat/grid/_box-sizing.scss","components/_bg.scss","components/_title-animation.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss","neat/grid/_media.scss","../../node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","components/_modal.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","components/_loader.scss","sections/_layout.scss","neat/grid/_span-columns.scss","neat/grid/_shift.scss","neat/grid/_outer-container.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss"],"names":[],"mappings":"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","file":"app.css","sourcesContent":["button,\ninput[type=\"submit\"] {\n  @extend %button;\n  @include appearance(none);\n  border: 3px solid white;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n","%button {\n  transition: all 0.3s;\n  -webkit-font-smoothing: antialiased;\n  background-color: white;\n  border-radius: 50%;\n  color: $cm-blue;\n  display: inline-block;\n  font-size: $base-font-size;\n  font-weight: 300;\n  line-height: 3.5em;\n  width: 4em;\n  //padding: 0.75em 1em;\n  padding: 0;\n  text-decoration: none;\n\n  &:hover {\n    background-color: transparent;\n    color: white;\n  }\n\n  &:focus,\n  &:active {\n    background-color: rgba(darken($cm-blue, 30%), 0.2);\n    color: white;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n}\n","html {\n  height: 100%;\n}\n\nbody {\n  -webkit-font-smoothing: antialiased;\n  background-color: $base-background-color;\n  color: $base-font-color;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  font-weight: 300;\n  line-height: $base-line-height;\n  text-align: center;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: $header-font-family;\n  font-weight: 400;\n  line-height: $header-line-height;\n  margin: 0;\n  text-rendering: optimizeLegibility; // Fix the character spacing for headings\n}\n\nh1 {\n  font-size: $h1-font-size;\n  margin: $h1-font-size / 5 0 $h1-font-size / 3;\n}\n\nh2 {\n  font-size: $h2-font-size;\n  margin: $h2-font-size / 5 0 $h2-font-size / 3;\n}\n\nh3 {\n  font-size: $h3-font-size;\n  margin: $h3-font-size / 5 0 $h3-font-size / 3;\n}\n\nh4 {\n  font-size: $h4-font-size;\n  margin: $h4-font-size / 5 0 $h4-font-size / 3;\n}\n\nh5 {\n  font-size: $h5-font-size;\n  margin: $h5-font-size / 5 0 $h5-font-size / 3;\n}\n\nh6 {\n  font-size: $h6-font-size;\n  margin: $h6-font-size / 5 0 $h6-font-size / 3;\n}\n\np {\n  margin: 0 0 ($base-spacing / 2);\n}\n\na {\n  @include transition(color 0.1s linear);\n  color: $base-link-color;\n  text-decoration: none;\n\n  &:hover {\n    color: $hover-link-color;\n  }\n\n  &:active, &:focus {\n    color: $hover-link-color;\n    outline: none;\n  }\n}\n\nhr {\n  border-bottom: $base-border;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  margin: $base-spacing 0;\n}\n\nimg,\npicture {\n  margin: 0;\n  max-width: 100%;\n}\n\nblockquote {\n  border-left: 2px solid $base-border-color;\n  color: lighten($base-font-color, 15);\n  margin: $base-spacing 0;\n  padding-left: $base-spacing / 2;\n}\n\ncite {\n  color: lighten($base-font-color, 25);\n  font-style: italic;\n\n  &:before {\n    content: \"\\2014 \\00A0\";\n  }\n}\n\n// Custom Typograpy\nsection {\n  text-shadow: 0 1px 2px rgba(#000, 0.3);\n}\n\n.browserupgrade {\n  background: darken($cm-blue, 15%);\n  padding: 1em;\n}","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","// Typography\n$sans-serif: 'Open Sans', $helvetica;\n$serif: 'Arvo', $georgia;\n$base-font-family: $sans-serif;\n$header-font-family: $serif;\n\n// Font Sizes\n$base-font-size: 1em;\n$h1-font-size: $base-font-size * 2.25;\n$h2-font-size: $base-font-size * 2;\n$h3-font-size: $base-font-size * 1.75;\n$h4-font-size: $base-font-size * 1.5;\n$h5-font-size: $base-font-size * 1.25;\n$h6-font-size: $base-font-size;\n\n// Line height\n$base-line-height: 1.6;\n$header-line-height: 1.25;\n\n// Other Sizes\n$base-border-radius: 3px;\n$base-spacing: $base-line-height * 1em;\n$base-z-index: 0;\n\n// Colors\n$blue: #477DCA;\n$dark-gray: #333;\n$medium-gray: #999;\n$light-gray: #DDD;\n$light-red: #FBE3E4;\n$light-yellow: #FFF6BF;\n$light-green: #E6EFC2;\n$cm-blue: #66c3bb;\n\n// Background Color\n$base-background-color: white;\n\n// Font Colors\n$base-font-color: white;\n$base-accent-color: $cm-blue;\n\n// Link Colors\n$base-link-color: lighten($base-accent-color, 10);\n$hover-link-color: lighten($base-accent-color, 20);\n$base-button-color: $base-link-color;\n$hover-button-color: $hover-link-color;\n\n// Flash Colors\n$alert-color: $light-yellow;\n$error-color: $light-red;\n$notice-color: lighten($base-accent-color, 40);\n$success-color: $light-green;\n\n// Border color\n$base-border-color: $light-gray;\n$base-border: 1px solid $base-border-color;\n\n// Forms\n$form-border-color: $base-border-color;\n$form-border-color-hover: darken($base-border-color, 10);\n$form-border-color-focus: $base-accent-color;\n$form-border-radius: $base-border-radius;\n$form-box-shadow: inset 0 1px 3px rgba(black,0.06);\n$form-box-shadow-focus: $form-box-shadow, 0 0 5px rgba(darken($form-border-color-focus, 5), 0.7);\n$form-font-size: $base-font-size;\n$form-font-family: $base-font-family;\n","fieldset {\n  background: lighten($base-border-color, 10);\n  border: $base-border;\n  margin: 0 0 ($base-spacing / 2) 0;\n  padding: $base-spacing;\n}\n\ninput,\nlabel,\nselect {\n  display: block;\n  font-family: $form-font-family;\n  font-size: $form-font-size;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: $base-spacing / 4;\n\n  &.required:after {\n    content: \"*\";\n  }\n\n  abbr {\n    display: none;\n  }\n}\n\ntextarea,\n#{$all-text-inputs},\nselect[multiple=multiple] {\n  color: white;\n  @include box-sizing(border-box);\n  @include transition(all 0.3s);\n  background-color: rgba(white, 0.05);\n  border-radius: 0px;\n  border: 1px solid rgba($form-border-color, 0.75);\n  border-width: 0 0 1px 0;\n  font-family: $form-font-family;\n  font-size: $form-font-size;\n  margin-bottom: $base-spacing;\n  padding: ($base-spacing / 2) ($base-spacing / 3);\n  width: 100%;\n\n  &:focus {\n    background-color: transparent;\n    outline: none;\n  }\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=\"search\"] {\n  @include appearance(none);\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: inline;\n  margin-right: $base-spacing / 4;\n}\n\ninput[type=\"file\"] {\n  padding-bottom: $base-spacing / 2;\n  width: 100%;\n}\n\nselect {\n  margin-bottom: $base-spacing;\n  max-width: 100%;\n  width: auto;\n}\n\n::-webkit-input-placeholder {\n   color: rgba(white, 0.6);\n}\n\n:-moz-placeholder { // Firefox 18-\n   color: white;\n}\n\n::-moz-placeholder { // Firefox 19+\n   color: white;\n}\n\n:-ms-input-placeholder {\n   color: rgba(white, 0.6);\n}\n","table {\n  border-collapse: collapse;\n  margin: ($base-spacing / 2) 0;\n  table-layout: fixed;\n  width: 100%;\n}\n\nth {\n  border-bottom: 1px solid darken($base-border-color, 15);\n  font-weight: bold;\n  padding: ($base-spacing / 2) 0;\n  text-align: left;\n}\n\ntd {\n  border-bottom: $base-border;\n  padding: ($base-spacing / 2) 0;\n}\n\ntr,\ntd,\nth {\n  vertical-align: middle;\n}\n","ul,\nol {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n\n  &%default-ul {\n    list-style-type: disc;\n    margin-bottom: $base-spacing / 2;\n    padding-left: $base-spacing;\n  }\n\n  &%default-ol {\n    list-style-type: decimal;\n    margin-bottom: $base-spacing / 2;\n    padding-left: $base-spacing;\n  }\n}\n\ndl {\n  margin-bottom: $base-spacing / 2;\n\n  dt {\n    font-weight: bold;\n    margin-top: $base-spacing / 2;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n","@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    @include box-sizing(border-box);\n  }\n\n  * {\n    &, &:before, &:after {\n      @include box-sizing(inherit);\n    }\n  }\n}\n","// Background\n\nbody {\n  //position: fixed;\n  height: 100%;\n  width: 100%;\n  background: image-url('bg.jpg') no-repeat center;\n  background-size: cover;\n  background-attachment: fixed;\n  padding: 0;\n  margin: 0;\n}\n","// Title Animation\n\nh1#name {\n  font-size: em(54);\n  text-align: center;\n  cursor: pointer;\n  background: #fff;\n  display: inline-block;\n  border-radius: 50%;\n  color: $cm-blue;\n  line-height: 2.15em;\n  text-decoration: none;\n  padding: 0 0 0 0.2em;\n  margin: 1em 0 0 -0.1em;\n  @include transition-property(background);\n  @include transition-delay(0.3s);\n  @include transition-duration(0.6s);\n\n  @include media($medium-screen-up) {\n\n    &:hover {\n      background: none;\n      text-decoration: none;\n      color: #fff;\n      @include transition-property(background);\n      @include transition-delay(0s);\n      @include transition-duration(0.1s);\n    }\n  }\n\n  .cap,\n  .lower {\n    position: relative;\n    top: 0.05em;\n    @include transition-duration(0.5s);\n    @include inline-block;\n    letter-spacing: -0.42em;\n  }\n\n  .cap {\n    letter-spacing: -0.38em;\n  }\n\n  @include media($medium-screen-up) {\n\n    &:hover .cap,\n    &:hover .lower,\n    &:focus .cap,\n    &:focus .lower,\n    &:active .cap,\n    &:active .lower {\n      letter-spacing: -0.05em;\n      margin: 0;\n    }\n\n    &:hover .lower,\n    &:focus .lower,\n    &:active .lower {\n      opacity: 1;\n    }\n  }\n\n  .lower {\n    opacity: 0;\n  } \n}\n\nh2.sub {\n  display: block;\n  clear: both;\n  font-size: 1.2em;\n  text-align: center;\n  color: #fff;\n  line-height: 1;\n  pointer-events: none;\n  margin: 1em 0 2em;\n\n  @include media($medium-screen-up) {\n    @include transition-duration(0.1s);\n    @include transition-delay(0s);\n    position: relative;\n    top: -1em;\n    opacity: 0;\n    margin: 0 0 1em;\n\n    .active & {\n      @include transition-duration(1s);\n      @include transition-delay(0.5s);\n      opacity: 1;\n    }\n  }\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns ($grid-columns)\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n\n  @else {\n    $loop-to: length($query);\n    $media-query: 'screen and ';\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if not is-even(length($query)) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + '(' + nth($query, $i) + ': ' + nth($query, $i + 1) + ') ';\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + 'and ';\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","// Modal\n\n.md-perspective {\n  height: 100%;\n  overflow: hidden;\n\n  body {\n    height: 100%;\n    overflow: hidden;\n    background: #222;\n    perspective: 600px;\n  }\n}\n\n.md-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 50%;\n  //max-width: 630px;\n  min-width: 320px;\n  height: auto;\n  z-index: 2000;\n  visibility: hidden;\n  backface-visibility: hidden;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n.md-show {\n  visibility: visible;\n}\n\n.md-overlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  opacity: 0;\n  //background: rgba(143, 27, 15, 0.8);\n  transition: all 0.3s;\n}\n\n.md-show ~ .md-overlay {\n  opacity: 1;\n  visibility: visible;\n}\n\n.md-effect .contact-content {\n  transform: scale(0.8);\n  opacity: 0;\n  transition: all 0.3s;\n}\n\n.md-show.md-effect ~ .md-overlay {\n  @include radial-gradient(circle at bottom left, #0FCDAB, #3EA2A9);\n}\n\n.md-effect .contact-content {\n\n  h3 {\n    background: transparent;\n  }\n\n  background: transparent;\n}\n\n.md-show.md-effect .contact-content {\n  transform: scale(1);\n  opacity: 1;\n}\n\n.md-close {\n  transition: opacity 0.3s;\n  opacity: 0.5;\n  position: absolute;\n  top: -1em;\n  right: 1em;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n.contact-content {\n  padding: 1em;\n  \n  p {\n    font-size: 1.75em;\n  }\n\n  @include media($medium-screen-up) {\n    font-size: 1.5em;\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n","// Loader\n\narticle {\n\n  html.js & {\n    transition: all .8s 1.5s;\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  html.no-js &,\n  html.wf-active &,\n  html.wf-inactive & {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\n.loader {\n  position: absolute;\n  top: calc(50% - 25px);\n  left: calc(50% - 50px);\n\n  html.js & {\n    transition: all .8s 1s;\n    opacity: 1;\n  }\n\n  html.wf-active &,\n  html.wf-inactive & {\n    opacity: 0;\n    visibility: hidden;\n  }\n}\n\n.loader,\n.loader::before,\n.loader::after {\n  position: absolute;\n  border: 3px solid transparent;\n  border-radius: 50%;\n  content: '';\n}\n\n.loader {\n  border-top-color: rgba(#fff, 0.6);\n  height: 100px;\n  width: 100px;\n  animation: rotateOne linear infinite;\n  animation-duration: 1.05s;\n}\n\n.loader::before {\n  border-top-color: #fff;\n  height: 75px;\n  width: 75px;\n  top: 10px;\n  left: 10px;\n  animation: rotateThree linear infinite;\n  animation-duration: 10s;\n}\n\n.loader::after {\n  border-top-color: rgba(#fff, 0.1);\n  height: 50px;\n  width: 50px;\n  top: 22px;\n  left: 22px;\n  animation: rotateTwo linear infinite;\n  animation-duration: 4s;\n}\n\n@keyframes rotateOne {\n  from {\n    transform: rotateZ(360deg);\n  }\n  to {\n    transform: rotateZ(0deg);\n  }\n}\n\n@keyframes rotateTwo {\n  from {\n    transform: rotateZ(340deg);\n  }\n  to {\n    transform: rotateZ(339deg);\n  }\n}\n\n@keyframes rotateThree {\n  from {\n    transform: rotateZ(320deg);\n  }\n  to {\n    transform: rotateZ(219deg);\n  }\n}","// Layout\n\nheader,\nsection,\nfooter {\n  @include span-columns(10);\n  @include shift(1);\n  margin-right: 0;\n\n  @include media($medium-screen-up) {\n    @include span-columns(8);\n    @include shift(2);\n    margin-right: 0;\n  }\n}\n\n// Set Font Size at Breakpoints\n@include media($medium-screen-up) {\n\n  article {\n    @include outer-container;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 90vh;\n  }\n\n  .inner {\n    flex: 1;\n  }\n\n  header {\n    font-size: 1.3em;\n  }\n\n  section {\n    font-size: 1.4em;\n  }\n}\n\nfooter {\n  margin-top: 2em;\n\n  &:before {\n    display: block;\n    content: \"\";\n    border-top: 1px solid rgba(#fff, 0.4);\n    width: 25%;\n    margin: 0 auto;\n\n  }\n\n  nav {\n    margin: 3em 0 4em;\n  }\n\n  ul {\n    display: inline-block;\n    text-align: center;\n  }\n\n  li {\n    display: inline-block;\n    margin: 0 0.25em;\n\n    @include media($medium-screen-up) {\n      margin: 0 0.5em;\n    }\n  }\n\n  a {\n    transition: opacity 0.5s;\n    opacity: 0.6;\n  }\n\n  img {\n    width: em(44);\n\n    @include media($medium-screen-up) {\n      width: em(61);\n    }\n  }\n\n  ul:hover {\n\n    a {\n      opacity: 0.1;\n\n      &.active {\n        opacity: 1;\n      }\n    }\n  }\n}\n","/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n/// @param {String} $display (block)\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\n///\n/// @param {Number (unitless)} $n-columns (1)\n///   Number of columns by which the element shifts.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -25.58941%;\n///   }\n\n@mixin shift($n-columns: 1) {\n  @include shift-in-context($n-columns);\n}\n\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\n///\n/// @param {List} $shift\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\n///\n///   The two values can be separated with any string such as `of`, `/`, etc.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3 of 6);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -52.41458%;\n///   }\n\n@mixin shift-in-context($shift: $columns of $container-columns) {\n  $n-columns: nth($shift, 1);\n  $parent-columns: container-shift($shift) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\n\n  // Reset nesting context\n  $parent-columns: $grid-columns !global;\n}\n","/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number (unit)} $local-max-width ($max-width)\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n"],"sourceRoot":"/source/"}